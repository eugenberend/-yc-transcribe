workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID != null && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "master"
    - if: $CI_COMMIT_TAG != null && $CI_COMMIT_BRANCH != "master"

stages:
  - prepare
  - plan
  - apply
  - send request
  - wait for job
  - destroy

.terraform:common:
  image:
    name: hashicorp/terraform:0.12.20
    entrypoint: [""]
  before_script:
    - terraform init ./terraform

plan:terraform:
  extends: .terraform:common
  stage: plan
  script:
    - terraform plan ./terraform

apply:terraform:
  extends: .terraform:common
  stage: apply
  when: on_success
  artifacts:
    expire_in: 60 min
    paths:
      - artifacts/*
  script:
    - terraform apply -auto-approve ./terraform
  allow_failure: false

send request:
  stage: send request
  script:
    - apt-get update && apt-get install jq -y
    - cd artifacts/
    - ./send_recognition_request.sh
  artifacts:
    expire_in: 60 min
    paths:
      - artifacts/job_id

wait for job:
  stage: wait for job
  script:
    - apt-get update && apt-get install jq -y
    - cd artifacts/
    - source job_id
    - ./get_operation_status.sh
  artifacts:
    expire_in: 60 min
    paths:
      - artifacts/transcript.json

destroy_on_success:terraform:
  extends: .terraform:common
  stage: destroy
  when: manual
  script:
    - terraform destroy -auto-approve ./terraform

destroy_on_failure:terraform:
  extends: .terraform:common
  stage: destroy
  when: on_failure
  script:
    - terraform destroy -auto-approve ./terraform
